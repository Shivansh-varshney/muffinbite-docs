"use client";
import Image from "next/image";
import { Copy } from "lucide-react";
import { useEffect, useState } from "react";
import { AnimatePresence, motion } from "framer-motion";
import { Tabs, TabsList, TabsTrigger, TabsContent } from "@radix-ui/react-tabs";
import { ArrowLeft, ArrowRight } from "lucide-react";
import Link from "next/link";

export default function Use() {

    const [activeTab, setActiveTab] = useState("sample");
    const [copied, setCopied] = useState("");

    useEffect(() => {
        document.title = "Use | MuffinBite"
    })

    const copyToClipboard = () => {
        navigator.clipboard.writeText(codeText);
        setCopied(true);
        setTimeout(() => setCopied(false), 1500);
    }

    const codeText = `bite> camp --create
Enter name for the campaign: test
Enter subject line for the email: {{Name}}, welcome to MuffinBite.
Enter template name you want to use: test
Enter attachments, (separated by commas if more than one): sailing_ship.pdf
Enter CC emails, (separated by commas if more than one):
Enter BCC emails, (separated by commas if more than one):
bite>
`
    const codeText2 = `Enter CC emails, (separated by commas if more than one): example@domain.com, another.email@example.com
Enter BCC emails, (separated by commas if more than one): example@domain.com, another.email@example.com`
    return (
        <>
            <h2 className="text-2xl font-bold">How to Use</h2>
            <div className="ml-5 my-2 text-lg text-justify space-y-5">
                <p>
                    Before we move to creating campaigns and sending the emails, let&apos;s understand the purpose of default folders provided by MuffinBite.
                </p>
                <p>
                    MuffinBite generates 5 folders on the first run. (6th folder i.e. &quot;Logs&quot; is generated when we set debug to &quot;True&quot;)
                    <Image width={200} height={100} alt="" src="/demos/folder_structure.png" className="w-1/2 my-2 ml-5" />
                </p>
                <p>
                    List of folders with explanation:
                </p>
                <ol className="ml-5 text-lg list-disc list-inside">
                    <li><strong>Attachments</strong>: Place all files you want to use as email attachments or embed inline in HTML templates in this folder.</li>
                    <li><strong>Campaigns</strong>: Stores all your campaigns. It is recommended **not** to make manual changes here.</li>
                    <li><strong>DataFiles</strong>: Store all your email records (CSV or Excel files) here for use in your outreach campaigns.</li>
                    <li><strong>EmailStatus</strong>: Contains the output files generated by MuffinBite, including records of successful and failed emails.</li>
                    <li><strong>Templates</strong>: Place all your HTML templates in this folder.</li>
                    <li><strong>Logs</strong>: Stores debug-level information in the <code>errors.log</code> file. This file is only created when debug mode is enabled.</li>
                </ol>
                <p>With that said, let&apos;s create our first campaign to get a better understanding of MuffinBite&apos;s power.</p>
                <Tabs className="mt-6" value={activeTab} onValueChange={setActiveTab}>
                    <div className="relative w-full">
                        <TabsList className="relative flex w-full bg-transparent rounded-full overflow-hidden">
                            {/* Animated slider */}
                            <motion.div
                                className="absolute top-[2px] left-[2px] h-[calc(100%-4px)] w-[calc(20%-4px)] bg-white/30 rounded-full"
                                animate={{
                                    x:
                                        activeTab === "sample" ? "0%" :
                                            activeTab === "templates" ? "100%" :
                                                activeTab === "campaign" ? "200%" :
                                                    activeTab === "test" ? "300%" :
                                                        "400%",
                                }}
                                transition={{ type: "spring", stiffness: 250, damping: 25 }}
                            />

                            <TabsTrigger
                                value="sample"
                                className="relative z-10 flex-1 text-center text-white py-2 font-medium cursor-pointer rounded-full data-[state=active]:bg-transparent"
                            >
                                Sample
                            </TabsTrigger>
                            <TabsTrigger
                                value="templates"
                                className="relative z-10 flex-1 text-center text-white py-2 font-medium cursor-pointer rounded-full data-[state=active]:bg-transparent"
                            >
                                1. Templates & Data
                            </TabsTrigger>
                            <TabsTrigger
                                value="campaign"
                                className="relative z-10 flex-1 text-center text-white py-2 font-medium cursor-pointer rounded-full data-[state=active]:bg-transparent"
                            >
                                2. Create Campaign
                            </TabsTrigger>
                            <TabsTrigger
                                value="test"
                                className="relative z-10 flex-1 text-center text-white py-2 font-medium cursor-pointer rounded-full data-[state=active]:bg-transparent"
                            >
                                3. Send Test
                            </TabsTrigger>
                            <TabsTrigger
                                value="real"
                                className="relative z-10 flex-1 text-center text-white py-2 font-medium cursor-pointer rounded-full data-[state=active]:bg-transparent"
                            >
                                4. Send Real
                            </TabsTrigger>
                        </TabsList>
                    </div>

                    <TabsContent className="mx-5 mt-4 overflow-y-auto element" value="sample">
                        <AnimatePresence mode="wait">
                            {
                                activeTab == "sample" &&
                                <motion.div
                                    key="sample"
                                    initial={{ opacity: 0, y: 20 }}
                                    animate={{ opacity: 1, y: 0 }}
                                    exit={{ opacity: 0, y: -20 }}
                                    transition={{ duration: 0.4, ease: "easeInOut" }}
                                >
                                    <p className="ml-5">
                                        I have two files in my attachments folder, <strong>profile.jpg</strong>, and <strong>sailing_ship.pdf</strong>
                                        <Image width={200} height={100} alt="" src="/demos/attachments.png" className="w-1/2 ml-5 my-2" />
                                        My email template (inside &quot;Templates&quot; folder with the name &quot;test.html&quot;) looks like below after rendering in browser.
                                        <Image width={200} height={100} alt="" src="/demos/email.png" className="w-1/4 ml-5 my-2" />
                                    </p>
                                    <p className="flex flex-col ml-5">
                                        Below is the campaign that we will use:
                                        <span className="inline-block mx-5 my-2 relative bg-black/50 rounded-xl p-4 font-mono text-sm text-white/90 shadow-inner overflow-x-auto">
                                            <code onClick={copyToClipboard} className="whitespace-pre-wrap block">
                                                {`bite> camp --create
Enter name for the campaign: test
Enter subject line for the email: {{Name}}, welcome to MuffinBite.
Enter template name you want to use: test
Enter attachments, (separated by commas if more than one): sailing_ship.pdf
Enter CC emails, (separated by commas if more than one): 
Enter BCC emails, (separated by commas if more than one): 
bite>

`}
                                            </code>
                                        </span>
                                    </p>
                                    <p className="ml-5">
                                        Now, we will move forward to sending our first email as &quot;test&quot; with the below command:
                                        <Image width={200} height={100} alt="" src="/demos/send_test.png" className="w-1/2 ml-5 my-2" />
                                        Also, you can see the message on the screen, &quot;Please visit this URL to authorize this application&quot;. <br />
                                        When you send emails for the first time, Google asks for authentication for your account, This is a one time thing only. <br />
                                        A browser window will open automatically, just visit the site and allow your own application to send the emails on your behalf.
                                        <br />
                                        <strong>
                                            Note:
                                        </strong>
                                        <br />
                                        <span className="ml-5">
                                            This is your own application with the name &quot;muffinbite&quot; that you created on your Google Cloud Console, so there&apos;s nothing <br />
                                            to worry about it. Just make sure that you keep your &quot;credentials.json&quot; file safe.
                                        </span>
                                    </p>
                                    <p className="ml-5 my-2">
                                        Below you can see that the email has reached the inbox, and {"{{Name}}"} has been replaced with actual name of the recipient.
                                        <Image width={200} height={100} alt="" src="/demos/inbox.png" className="w-1/4 ml-5 mt-2" />
                                        <Image width={200} height={100} alt="" src="/demos/inbox2.png" className="w-1/4 ml-5 " />
                                    </p>
                                </motion.div>
                            }
                        </AnimatePresence>
                    </TabsContent>
                    <TabsContent className="mx-5 mt-4 overflow-y-auto element" value="templates">
                        <AnimatePresence mode="wait">
                            {
                                activeTab == "templates" &&
                                <motion.div
                                    key="templates"
                                    initial={{ opacity: 0, y: 20 }}
                                    animate={{ opacity: 1, y: 0 }}
                                    exit={{ opacity: 0, y: -20 }}
                                    transition={{ duration: 0.4, ease: "easeInOut" }}
                                >
                                    <div className="text-justified mx-5">
                                        <p>
                                            MuffinBite uses HTML templates for email content, you don’t need to write HTML yourself. Simply ask any AI model, like ChatGPT or Gemini, to generate a base HTML template for you.
                                        </p>
                                        <br />
                                        <p>
                                            MuffinBite can automatically extract data from each row of your file and insert it into the template, both in the subject line and the email body.
                                        </p>
                                        <p>
                                            Use {"{{variable}}"} where `variable` corresponds to the column name in your file, you have already seen the same happening with the subject line in the sample. Let&apos;s say my data file looks something like:
                                        </p>
                                        <Image width={600} height={100} alt="" src="/demos/csv.png" className="ml-5 my-2" />
                                        <p className="flex flex-col">
                                            <span>Then, I can use {"{{Name}}"} in the html template like below:</span>
                                            <span className="inline-block mx-5 my-2 relative bg-black/50 rounded-xl p-4 font-mono text-sm text-white/90 shadow-inner overflow-x-auto">
                                                <code onClick={copyToClipboard} className="whitespace-pre-wrap block">
                                                    {`<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>Email Template</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            margin-top: 20px;
            background-color: #f7f7f7;
            font-family: Arial, sans-serif;
        }

        table {
            border-collapse: collapse;
        }

        .content {
            padding: 20px;
        }

        .button a {
            background-color: #4A90E2;
            color: #ffffff;
            padding: 10px 20px;
            text-decoration: none;
            border-radius: 4px;
            display: inline-block;
        }

        p {
            margin: 0 0 10px 0;
        }
    </style>
</head>

<body>
    <table width="100%" bgcolor="#f7f7f7">
        <tr>
            <td align="center">
                <table width="600" bgcolor="#ffffff">
                    <tr>
                        <td align="center" style="padding: 20px;">
                            <img src="/home/shivansh/Documents/all_codes/tryMuffinBite/Attachments/profile.jpg" alt="Profile Image" width="50%" height="100%"
                                style="border-radius:10%; display:block; margin-bottom:10px;">
                            <h2>Hello {{Name}},</h2>
                        </td>
                    </tr>
                    <tr>
                        <td class="content">
                            <p>We’re thrilled to have you onboard! This email is a sample template you can send via
                                MuffinBite.</p>
                            <p>Customize it to include your campaign content, personalized greetings, or offers.</p>
                            <p class="button" style="text-align:center; margin-top:20px;">
                                <a href="#">Take Action</a>
                            </p>
                        </td>
                    </tr>
                    <tr>
                        <td bgcolor="#f0f0f0" align="center" style="padding: 15px; font-size:12px; color:#888;">
                            <p>You received this email because you signed up for our service.</p>
                            <p>&copy; 2025 Your Company Name. All rights reserved.</p>
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
    </table>
</body>

`}
                                                </code>
                                            </span>
                                        </p>
                                        <p>
                                            Also, to insert the image in my html template, I&apos;ve given the absolute location of the file in the src value of {"<img />"} tag.
                                        </p>
                                    </div>
                                </motion.div>
                            }
                        </AnimatePresence>
                    </TabsContent>
                    <TabsContent className="mx-5 mt-4 overflow-y-auto element" value="campaign">
                        <AnimatePresence mode="wait">
                            {
                                activeTab == "campaign" &&
                                <motion.div
                                    key="campaign"
                                    initial={{ opacity: 0, y: 20 }}
                                    animate={{ opacity: 1, y: 0 }}
                                    exit={{ opacity: 0, y: -20 }}
                                    transition={{ duration: 0.4, ease: "easeInOut" }}
                                >
                                    <p className="flex flex-col ml-5">
                                        We&apos;ll go to our MuffinBite terminal, and get started with creating a campaign.
                                        <br /> The command to create a campaign is:
                                        <span className="inline-block mx-5 my-2 relative bg-black/50 rounded-xl p-4 font-mono text-sm text-white/90 shadow-inner overflow-x-auto">
                                            <button
                                                onClick={copyToClipboard}
                                                className="absolute top-3 right-3 px-2 py-1 rounded-md text-xs transition"
                                            >
                                                {copied ? <span className="text-green-500">Copied!</span> : <Copy className="h-4 w-4" />}
                                            </button>
                                            <code onClick={copyToClipboard} className="whitespace-pre-wrap block">camp --create.</code>
                                        </span>
                                        Then it will prompt you to enter details as below:
                                        <span className="inline-block mx-5 my-2 relative bg-black/50 rounded-xl p-4 font-mono text-sm text-white/90 shadow-inner overflow-x-auto">
                                            <button
                                                onClick={copyToClipboard}
                                                className="absolute top-3 right-3 px-2 py-1 rounded-md text-xs transition"
                                            >
                                                {copied ? <span className="text-green-500">Copied!</span> : <Copy className="h-4 w-4" />}
                                            </button>
                                            <code onClick={copyToClipboard} className="whitespace-pre-wrap block">{codeText}</code>
                                        </span>
                                        Notice how, I&apos;ve added curly braces in the subject line with column `Name`, to personalize the subject line.<br />
                                        Also for now, I&apos;ve left the CC and BCC emails as empty, but you can add them like below:
                                        <span className="inline-block mx-5 my-2 relative bg-black/50 rounded-xl p-4 font-mono text-sm text-white/90 shadow-inner overflow-x-auto">
                                            <button
                                                onClick={copyToClipboard}
                                                className="absolute top-3 right-3 px-2 py-1 rounded-md text-xs transition"
                                            >
                                                {copied ? <span className="text-green-500">Copied!</span> : <Copy className="h-4 w-4" />}
                                            </button>
                                            <code onClick={copyToClipboard} className="whitespace-pre-wrap block">{codeText2}</code>
                                        </span>
                                    </p>
                                </motion.div>
                            }
                        </AnimatePresence>
                    </TabsContent>
                    <TabsContent className="mx-5 mt-4 overflow-y-auto element" value="test">
                        <AnimatePresence mode="wait">
                            {
                                activeTab == "test" &&
                                <motion.div
                                    key="test"
                                    initial={{ opacity: 0, y: 20 }}
                                    animate={{ opacity: 1, y: 0 }}
                                    exit={{ opacity: 0, y: -20 }}
                                    transition={{ duration: 0.4, ease: "easeInOut" }}
                                >
                                    <div className="mx-5 ">
                                        Muffinbite sends emails in two modes: <strong>test</strong> and <strong>real</strong>
                                        <ol className="ml-5 list-inside list-decimal">
                                            <li>
                                                Test Emails: Data that is in files with &apos;test&apos; as prefix in their names is treated as test data (shown in step 1: Templates & Data)
                                            </li>
                                            <li>
                                                Real Emails: Data that is in files without &apos;test&apos; as prefix in their names is treated as real data
                                            </li>
                                        </ol>
                                        <p className="flex flex-col">
                                            <span>Below command sends <strong>test emails:</strong></span>
                                            <span className="inline-block mx-5 my-2 relative bg-black/50 rounded-xl p-4 font-mono text-sm text-white/90 shadow-inner overflow-x-auto">
                                                <code onClick={copyToClipboard} className="whitespace-pre-wrap block">{`bite> send --test
 
Enter the campaign name you want to use: test

Sending emails from: test.csv

      sent to: varshneyshivansh36@gmail.com

All Done !!

bite>
`}
                                                </code>
                                            </span>
                                            <span>
                                                It asks for the name of the campaign that you want to use, and directly sends emails to test data emails.
                                            </span>
                                        </p>
                                    </div>
                                </motion.div>
                            }
                        </AnimatePresence>
                    </TabsContent>
                    <TabsContent className="mx-5 mt-4 overflow-y-auto element" value="real">
                        <AnimatePresence mode="wait">
                            {
                                activeTab == "real" &&
                                <motion.div
                                    key="real"
                                    initial={{ opacity: 0, y: 20 }}
                                    animate={{ opacity: 1, y: 0 }}
                                    exit={{ opacity: 0, y: -20 }}
                                    transition={{ duration: 0.4, ease: "easeInOut" }}
                                >
                                    <div className="mx-5 ">
                                        <p>
                                            Real data file:
                                            <Image alt="" src="/demos/real_data.png" width={600} height={100} className="ml-5 my-2" />
                                        </p>
                                        <p className="flex flex-col">
                                            <span>Below command sends <strong>real emails:</strong></span>
                                            <span className="inline-block mx-5 my-2 relative bg-black/50 rounded-xl p-4 font-mono text-sm text-white/90 shadow-inner overflow-x-auto">
                                                <code onClick={copyToClipboard} className="whitespace-pre-wrap block">{`bite> send --real
 
Enter the campaign name you want to use: test

Sending emails from: real.csv

      sent to: tutorial.muffinbite@gmail.com

All Done !!

bite>
`}
                                                </code>
                                            </span>
                                            <span>
                                                It asks for the name of the campaign that you want to use, and directly sends emails to real data emails.
                                            </span>
                                        </p>
                                    </div>
                                </motion.div>
                            }
                        </AnimatePresence>
                    </TabsContent>
                </Tabs>
                <div className="mt-5 flex justify-between w-full">
                    <Link href="/docs/set_up"><span className="flex items-center justify-center gap-2"><ArrowLeft size={20} />Set Up</span> </Link>
                    <Link href="/docs/commands"><span className="flex items-center justify-center gap-2">Commands<ArrowRight size={20} /></span> </Link>
                </div>
            </div>
        </>
    )
}